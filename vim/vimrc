set ts=3
set sw=3
set bs=2
set sta
set ignorecase
set smartcase
set expandtab
set hlsearch
set incsearch
set ai
set cursorline
set number
set visualbell
set ruler
set ttyfast
set laststatus=2
set undofile
set hidden
set nowrap
set tags=tags;~
set smartindent
syntax on
set nocompatible
filetype off

" Airline shit
let g:airline#extensions#tabline#enabled = 1
let g:airline_theme='dark'

" Don't highlight matched parens
let loaded_matchparen = 1


set dir=~/.vimswap//,/var/tmp//,/tmp//,.
set undodir=~/.vim/tmp//,/var/tmp//,/tmp//,.

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

" Github bundles
Bundle 'gmarik/vundle'
Bundle 'tpope/vim-fugitive'
Bundle 'nono/vim-handlebars'
Bundle 'kien/ctrlp.vim.git'
Bundle 'airblade/vim-gitgutter'
Bundle 'scrooloose/nerdtree.git'
Plugin 'bling/vim-airline.git'
Bundle 'groenewege/vim-less.git'
Bundle 'scrooloose/syntastic.git'
Plugin 'othree/html5.vim'
Plugin 'isRuslan/vim-es6'
Plugin 'xolox/vim-misc.git'
Plugin 'xolox/vim-easytags.git'
Plugin 'wookiehangover/jshint.vim'
Plugin 'Shougo/vimproc.vim'
Plugin 'Quramy/tsuquyomi.git'
Plugin 'leafgarland/typescript-vim.git'
Plugin 'Quramy/vim-js-pretty-template.git'
Plugin 'Quramy/vim-dtsm.git'
Plugin 'mhartington/vim-typings.git'
Plugin 'tomasr/molokai.git'
Plugin 'scwood/vim-hybrid'
Plugin 'burnettk/vim-angular'
Bundle 'djoshea/vim-autoread'

" Vim bundles

filetype plugin indent on

set statusline=+'%<\ %f\ %{fugitive#statusline()}'

" Change <Leader> to ,
let mapleader = ","

" For commenting
let NERDCustomDelimiters = {
    \ 'clevercss': { 'left': '//' }
    \}
let NERDSpaceDelims = 1

" Set GUI font type/size
set gfn=Menlo:h14

" Strip trailing whitespace from any python file before saving
autocmd BufWritePre *.py normal m`:%s/\s\+$//e``

" Django specific stuff
" autocmd FileType html set ft=htmldjango.html
autocmd FileType python set ft=python.django

" Handlebars
au BufNewFile,BufRead *.tmpl set ft=html syntax=handlebars | runtime! ftplugin/handlebars.vim ftplugin/handlebars*.vim ftplugin/handlebars/*.vim

" Custom maps
map <Leader>n :NERDTreeToggle<CR>
" Shift-Enter breaks out of current item and starts new line
imap <S-CR> <Esc>o
" Map Ctrl-C to the Esc key (cause I hate taking my hands off the home row)
imap <C-c> <Esc>
" Map Ctrl+_ to the closetag plugin
imap <C-_> <C-x>/
" rename variable locally
nnoremap gr gd[{V%:s/<C-R>////gc<left><left><left>
" rename variable globally
nnoremap gR gD[{:%s/<C-R>////gc<left><left><left>
" Open definition in new tab
map <C-\> :tab split<CR>:exec("tag ".expand("<cword>"))<CR>
" Vertical split
map <Leader>vs :vs<CR>
" Horizontal split
map <Leader>sp :sp<CR>
" Increase and decrease the size of a split
map + <C-W>>
map - <C-W><
" Clear search buffer
"map <Leader>bb :let @/=""<CR>
" Move between buffers
" Mappings to access buffers (don't use "\p" because a
" delay before pressing "p" would accidentally paste).
" \l       : list buffers
" \b \f \g : go back/forward/last-used
" \1 \2 \3 : go to buffer 1/2/3 etc
nnoremap <Leader>l :ls<CR>
nnoremap <Leader>b :bp<CR>
nnoremap <Leader>f :bn<CR>
nnoremap <Leader>1 :1b<CR>
nnoremap <Leader>2 :2b<CR>
nnoremap <Leader>3 :3b<CR>
nnoremap <Leader>4 :4b<CR>
nnoremap <Leader>5 :5b<CR>
nnoremap <Leader>6 :6b<CR>
nnoremap <Leader>7 :7b<CR>
nnoremap <Leader>8 :8b<CR>
nnoremap <Leader>9 :9b<CR>
nnoremap <Leader>0 :10b<CR>
" It's useful to show the buffer number in the status line.
" set laststatus=2 statusline=%02n:%<%f\ %h%m%r%=%-14.(%l,%c%V%)\ %P'

" Vimgrep stuff
nnoremap <Leader>cn :cnext<CR>
nnoremap <Leader>cp :cprev<CR>
nnoremap <Leader>co :copen<CR>

" Fugitive maps
map <Leader>gb :Gblame<CR>

nnoremap <leader>q :bd<cr>

" Airline stuff
" Enable the list of buffers
let g:airline#extensions#tabline#enabled = 1
" Show just the filename
let g:airline#extensions#tabline#fnamemod = ':t'
" Show the buffer numbers
let g:airline#extensions#tabline#buffer_nr_show = 1

" For my documentation purposes --
" gt is mapped to tabnext
" gT is mapped to tabprevious
" :bd deletes current buffer
" :vimgrep /pattern/ **/*.py searches a pattern in all files ending in .py
" :cope opens list of errors, or files from vimgrep


" Start NERDTree when vim opens, only in GUI mode
"if has("gui_running")
"    autocmd VimEnter * NERDTree
"    autocmd BufEnter * NERDTreeMirror
"    autocmd VimEnter * wincmd w
"endif


" color jellybean
" color sunburst
" color vivify
" color deanify
" color burnttoast256
" color twilight256
" color jellybeans
" color molokai
set background=dark
color hybrid

set colorcolumn=120

if !has('gui_running')
    hi Comment cterm=None
endif

let g:gitgutter_escape_grep = 1

hi SignColumn ctermbg=0
hi Normal ctermbg=0
hi link javaScriptStringS String
hi link htmlLink Normal
hi link typescriptBraces Normal
hi link typescriptEndColons Normal

"  move text and rehighlight -- vim tip_id=224 
" vnoremap > ><CR>gv 
" vnoremap < <<CR>gv 
map <Leader>/ <Leader>ci

" clear highlight
map <Leader>m :noh<CR>

" Make command-t ignore some files
set wildignore=.DS_Store,*.db*.o,*.pyc,*.git,*.iml,*.obj,*.class,.idea,dist,bower_components,node_modules

let g:molokai_original = 1
let g:rehash256 = 1

let g:angular_source_directory = 'app/src'
